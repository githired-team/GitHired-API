// <auto-generated />
using GitHiredApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GitHiredApi.Migrations
{
    [DbContext(typeof(GitHiredApiDbContext))]
    [Migration("20190204200719_initial2")]
    partial class initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GitHiredApi.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Headline");

                    b.Property<string>("Industry");

                    b.Property<string>("Title");

                    b.Property<string>("Website");

                    b.HasKey("ID");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Headline = "",
                            Industry = "Technology",
                            Title = "Microsoft",
                            Website = "www.microsoft.com"
                        },
                        new
                        {
                            ID = 2,
                            Headline = "",
                            Industry = "e-commerce marketplace",
                            Title = "Groupon",
                            Website = "www.groupon.com"
                        });
                });

            modelBuilder.Entity("GitHiredApi.Models.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<string>("Title");

                    b.Property<string>("WageRange");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("GitHiredApi.Models.RequiredSkills", b =>
                {
                    b.Property<int>("skill");

                    b.Property<int>("JobID");

                    b.HasKey("skill", "JobID");

                    b.HasIndex("JobID");

                    b.ToTable("requiredskills");
                });

            modelBuilder.Entity("GitHiredApi.Models.Job", b =>
                {
                    b.HasOne("GitHiredApi.Models.Company", "company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GitHiredApi.Models.RequiredSkills", b =>
                {
                    b.HasOne("GitHiredApi.Models.Job", "job")
                        .WithMany("requiredskills")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
